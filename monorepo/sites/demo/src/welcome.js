import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import React from 'react';
// TODO(monorepo): change version.json path
import version from '../../../../src/version.json';
function DatasetList(props) {
    const { configs, theme } = props;
    const aClassName = 'list-group-item list-group-item-action flex-column align-items-start bg-secondary';
    const links = configs.map(({ id, name, description }) => (_jsxs("div", { className: aClassName, children: [_jsxs("a", { href: `?dataset=${id}&theme=${theme}`, children: [_jsx("h5", { children: name }), _jsx("p", { children: description })] }, id), _jsxs("a", { href: `?dataset=${id}&theme=${theme}&small`, style: { fontSize: '75%' }, children: [name, " as component"] })] }, id)));
    return (_jsx("div", { className: "list-group", children: links }));
}
function Form(props) {
    const { configs, theme } = props;
    return (_jsxs("form", { method: "GET", children: [_jsx("h1", { children: "Vitessce" }), _jsx("div", { children: "Select a dataset:" }), _jsx(DatasetList, { configs: configs, theme: theme }), _jsx("br", {}), _jsx("div", { children: "Or specify URL of configuration:" }), _jsxs("div", { className: "input-group mb-3", children: [_jsx("input", { type: "text", name: "url", className: "form-control" }), _jsx("input", { type: "hidden", name: "theme", value: theme }), _jsx("div", { className: "input-group-append", children: _jsx("button", { className: "btn btn-outline-secondary", type: "submit", children: "Load" }) })] })] }));
}
function Info() {
    return (_jsxs(_Fragment, { children: [_jsxs("p", { className: "info-paragraph", children: ["Vitessce is a visual integration tool for exploration of spatial single cell experiments. Its modular design is optimized for scalable, linked visualizations that support the spatial and non-spatial representation of tissue-, cell- and molecule-level data. Vitessce integrates the ", _jsx("a", { href: "http://viv.gehlenborglab.org/", children: "Viv library" }), " to visualize highly multiplexed, high-resolution, high-bit depth image data directly from OME-TIFF files and Bio-Formats-compatible Zarr stores."] }), _jsx("h5", { className: "info-section-text", children: "Contributors" }), _jsxs("ul", { children: [_jsx("li", { children: _jsx("a", { href: "https://github.com/keller-mark", children: "Mark Keller" }) }), _jsx("li", { children: _jsx("a", { href: "https://github.com/mccalluc", children: "Chuck McCallum" }) }), _jsx("li", { children: _jsx("a", { href: "https://github.com/ilan-gold", children: "Ilan Gold" }) }), _jsx("li", { children: _jsx("a", { href: "https://github.com/manzt", children: "Trevor Manz" }) }), _jsx("li", { children: _jsx("a", { href: "https://github.com/thomaslchan", children: "Tos Chan" }) }), _jsx("li", { children: _jsx("a", { href: "https://github.com/jkmarx", children: "Jennifer Marx" }) }), _jsx("li", { children: _jsx("a", { href: "https://github.com/pkharchenko", children: "Peter Kharchenko" }) }), _jsx("li", { children: _jsx("a", { href: "https://github.com/ngehlenborg", children: "Nils Gehlenborg" }) })] }), _jsx("h5", { className: "info-section-text", children: "Source Code" }), _jsxs("ul", { children: [_jsx("li", { children: _jsx("a", { href: "https://github.com/vitessce/vitessce", children: "GitHub" }) }), _jsx("li", { children: _jsx("a", { href: "https://www.npmjs.com/package/vitessce", children: "NPM" }) })] }), _jsx("h5", { className: "info-section-text", children: "Funding" }), _jsxs("ul", { children: [_jsx("li", { children: "NIH/OD Human BioMolecular Atlas Program (HuBMAP) (OT2OD026677, PI: Nils Gehlenborg)." }), _jsx("li", { children: "NIH/NLM Biomedical Informatics and Data Science Research Training Program (T15LM007092, PI: Nils Gehlenborg)" }), _jsx("li", { children: "Harvard Stem Cell Institute (CF-0014-17-03, PI: Nils Gehlenborg)" })] }), _jsxs("p", { className: "info-section-text", children: ["This deployment: branch=", version.branch, " | hash=", version.hash, " | date=", version.date] })] }));
}
export function Welcome(props) {
    const { configs, theme } = props;
    return (_jsx("div", { className: `vitessce-container vitessce-theme-${theme} welcome-container`, children: _jsx("div", { className: "react-grid-layout container-fluid", style: { height: 'max(100vh, 100%)' }, children: _jsxs("div", { className: "row", children: [_jsx("div", { className: "welcome-col-left", children: _jsx("div", { className: "card card-body bg-primary", children: _jsx(Form, { configs: configs, theme: theme }) }) }), _jsx("div", { className: "welcome-col-right", children: _jsx("div", { className: "card card-body bg-primary", children: _jsx(Info, {}) }) })] }) }) }));
}
